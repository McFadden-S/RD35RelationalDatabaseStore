
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author shaemcfadden
 */
public class Store extends javax.swing.JFrame {
    
    private Controller controller;
    private LogIn loginUI;
    private DefaultListModel storeListModel = new DefaultListModel();
    private DefaultListModel cartListModel = new DefaultListModel();
    private boolean selected = false;
    private int selectedID = 0;
    /**
     * Creates new form Store
     */
    public Store() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        tabPane = new javax.swing.JTabbedPane();
        storePane = new javax.swing.JPanel();
        productLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayList = new javax.swing.JList<>();
        selectButton = new javax.swing.JButton();
        addCartButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        cartPane = new javax.swing.JPanel();
        removeCartButton = new javax.swing.JButton();
        purchaseButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        cartList = new javax.swing.JList<>();
        accountPane = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Store");

        storePane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        productLabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        productLabel.setText("Products");

        displayList.setModel(storeListModel);
        displayList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(displayList);

        jScrollPane2.setViewportView(jScrollPane1);

        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        addCartButton.setText("Add To Cart");

        backButton.setText("Back");
        backButton.setEnabled(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout storePaneLayout = new javax.swing.GroupLayout(storePane);
        storePane.setLayout(storePaneLayout);
        storePaneLayout.setHorizontalGroup(
            storePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(storePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(storePaneLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(storePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addCartButton, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(storePaneLayout.createSequentialGroup()
                        .addComponent(productLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        storePaneLayout.setVerticalGroup(
            storePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, storePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(storePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(storePaneLayout.createSequentialGroup()
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabPane.addTab("Store", storePane);

        cartPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        removeCartButton.setText("Remove From Cart");

        purchaseButton.setText("Purchase");

        cartList.setModel(cartListModel);
        jScrollPane4.setViewportView(cartList);

        javax.swing.GroupLayout cartPaneLayout = new javax.swing.GroupLayout(cartPane);
        cartPane.setLayout(cartPaneLayout);
        cartPaneLayout.setHorizontalGroup(
            cartPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(cartPaneLayout.createSequentialGroup()
                        .addComponent(removeCartButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purchaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                .addContainerGap())
        );
        cartPaneLayout.setVerticalGroup(
            cartPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(cartPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeCartButton)
                    .addComponent(purchaseButton))
                .addContainerGap())
        );

        tabPane.addTab("Shopping Cart", cartPane);

        accountPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        logoutButton.setText("Log Out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout accountPaneLayout = new javax.swing.GroupLayout(accountPane);
        accountPane.setLayout(accountPaneLayout);
        accountPaneLayout.setHorizontalGroup(
            accountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPaneLayout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addContainerGap())
        );
        accountPaneLayout.setVerticalGroup(
            accountPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPaneLayout.createSequentialGroup()
                .addContainerGap(214, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addContainerGap())
        );

        tabPane.addTab("Account", accountPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        loginUI.setVisible(true);
        this.setVisible(false);
        controller.logout();
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        if(!selected){
            try {
                this.loadProductList();
            } catch (SQLException ex) {
                System.out.println("REFRESH FAILED");
            }
        }//end of if not selected
        else{
            try {
                this.loadItemList(selectedID);
            } catch (SQLException ex) {
                System.out.println("SELECTED REFRESH FAILED");
            }//end of catch  
        }//end of else selected
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        //takes selected item and parses the id from it
        int id = Integer.parseInt(displayList.getSelectedValue().split(":")[0]);
        selectedID = id;
        
        try {
            this.loadItemList(id);
        } catch (SQLException ex) {
            System.out.println("LOADING ITEM INFO FAILED");
        }//end of catch
        
        selected = true;
        backButton.setEnabled(true);
        selectButton.setEnabled(false);
    }//GEN-LAST:event_selectButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        try {
            this.loadProductList();
        } catch (SQLException ex) {
            System.out.println("BACK BUTTON LOAD FAILED");
        }//end of catch
        
        selected = false;
        backButton.setEnabled(false);
        selectButton.setEnabled(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Store().setVisible(true);
            }
        });
    }

    /*
    Purpose: set the store UI's controller
    In: Object to be set as the controller
    Out: none
    */
    public void setController(Controller c){
        controller = c;
    }//end of setController
    
    /*
    Purpose: set the store UI's login UI
    In: Object to be set as store UI
    Out: none
    */
    public void setloginUI(LogIn l){
        loginUI = l;
    }//end of setLoginUI
    
    /*
    Purpose: load product list in the store
    In: None
    Out: None
    */
    public void loadProductList() throws SQLException{
        storeListModel.removeAllElements();
        
        String[] pro = new String[controller.getNumberofProducts(true)];
        pro = controller.getProductInfo(pro.length);
        
        for(int i = 0; i < pro.length; i++){
            storeListModel.addElement(pro[i]);
        }//end of for loop
        
    }//end of loadProductList
    
    /*
    Purpose: load cart list in the store
    In: None
    Out: None
    */
    public void loadCartList() throws SQLException{
        cartListModel.removeAllElements();
        
        String[] cart = new String[controller.getNumberofProducts(false)];
        cart = controller.getCartInfo(cart.length);
        
        for(int i = 0; i < cart.length; i++){
            cartListModel.addElement(cart[i]);
        }//end of for loop
        
    }//end of loadCartList
    
    /*
    Purpose: load item list in the store
    In: int of itemID
    Out: None
    */
    public void loadItemList(int itemID) throws SQLException{
        storeListModel.removeAllElements();
        
        String[] item = new String[controller.getNumberofColumns("Products")];
        item = controller.getItemInfo(item.length, itemID);
        
        for(int i = 0; i < item.length; i++){
            storeListModel.addElement(item[i]);
        }//end of for loop
        
    }//end of loaditemList
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountPane;
    private javax.swing.JButton addCartButton;
    private javax.swing.JButton backButton;
    private javax.swing.JList<String> cartList;
    private javax.swing.JPanel cartPane;
    private javax.swing.JList<String> displayList;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel productLabel;
    private javax.swing.JButton purchaseButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeCartButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JPanel storePane;
    private javax.swing.JTabbedPane tabPane;
    // End of variables declaration//GEN-END:variables
}
